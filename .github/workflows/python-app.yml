name: Python application (tests + coverage)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Only let one workflow per branch run at a time (saves CI minutes)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Tests (Python ${{ matrix.python-version }} • ${{ runner.os }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"                        # cache pip by hashing requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # pytest/pytest-cov are already in requirements, but this is harmless if duplicated:
          pip install pytest pytest-cov

      - name: Show environment info
        run: |
          python --version
          pip --version
          pytest --version

      - name: Run tests with coverage (≥90%)
        env:
          # Make test output deterministic/quiet; these are optional
          PYTHONUNBUFFERED: "1"
          PYTHONDONTWRITEBYTECODE: "1"
        run: |
          pytest --cov=app --cov-report=term-missing --cov-fail-under=90

      - name: Generate HTML coverage report
        if: always()
        run: |
          pytest --cov=app --cov-report=html

      - name: Upload coverage HTML artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: htmlcov/
          if-no-files-found: warn
          retention-days: 7