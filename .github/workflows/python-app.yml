name: Python application (tests + coverage)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: 🧩 Check out code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: 📦 Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install pytest pytest-cov pandas colorama

      - name: 🧪 Run pytest with coverage
        shell: bash
        run: |
          python -m pytest --cov=app --cov-report=term-missing --cov-fail-under=90
        env:
          PYTHONUNBUFFERED: "1"
          PYTHONDONTWRITEBYTECODE: "1"

      - name: 📊 Generate HTML coverage report
        if: always()
        shell: bash
        run: |
          python -m pytest --cov=app --cov-report=html

      - name: 📤 Upload coverage HTML artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: htmlcov/
          if-no-files-found: warn
          retention-days: 7